af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 364) 
af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 403) 
af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 600) 
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 601) int Board::squareUnderAttack(int square){
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 602) 	int new_square;
af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 604) 	//Knight
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 605) 		if((KNIGHT_LOOKUP_TBL[square] & pieceTypes[!color][4]) != 0) return 1;
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 608) 		tmpBitBoard |= RAYS[square][1] ^ (pieces[color] & RAYS[square][1]);
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 614) 		tmpBitBoard |= RAYS[square][3] ^ (pieces[color] & RAYS[square][3]);
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 620) 		tmpBitBoard |= RAYS[square][5] ^ (pieces[color] & RAYS[square][5]);
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 626) 		tmpBitBoard |= RAYS[square][7] ^ (pieces[color] & RAYS[square][7]);
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 631) 		if((tmpBitBoard & pieceTypes[!color][3]) != 0 || (tmpBitBoard & pieceTypes[!color][1]) != 0) return 1;
cc1aef05 (JMcknight              2022-10-25 08:26:29 -0400 632) 
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 665) 		if(color){
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 666) 			if((pieceTypes[!color][5] & (1 << (square-9))) != 0 || (pieceTypes[!color][1] & (1 << (square-7)))) return 1;
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 667) 		}else{
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 668) 			if((pieceTypes[!color][5] & (1 << (square+9))) != 0 || (pieceTypes[!color][1] & (1 << (square+7)))) return 1;
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 669) 		}
4d48537c (JMcknight              2022-10-25 08:54:03 -0400 670) 
b46f046a (JMcknight              2022-10-18 09:31:07 -0400 681) 	}
b46f046a (JMcknight              2022-10-18 09:31:07 -0400 696) 	}
cc1aef05 (JMcknight              2022-10-25 08:26:29 -0400 697) 
b46f046a (JMcknight              2022-10-18 09:31:07 -0400 715) 	}
af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 716) 
af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 723) 
cc1aef05 (JMcknight              2022-10-25 08:26:29 -0400 728) 
cc1aef05 (JMcknight              2022-10-25 08:26:29 -0400 764) 
3f6f97d8 (JMcknight75            2022-10-26 17:29:36 -0400 770) //Updates bit boards for a pawn promotion
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 772) 	if((allPieces&(1<<move.toSquare)) != 0){
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 773) 		//Capture into Promotion
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 774) 		for(int i = 1; i < 4; i++){
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 775) 			if((pieceTypes[!color][i] & (1 << move.toSquare)) != 0){
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 776) 				pieceTypes[!color][i] &= ~(1 << move.toSquare);
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 777) 				pieces[!color] &= ~(1 << move.toSquare);
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 778) 				break;
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 779) 			}
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 780) 		}
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 781) 	}
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 782) 	allPieces &= ~(1 << move.fromSquare);
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 783) 	allPieces |= (1 << move.toSquare);
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 784) 	emptySquares &= ~(1 << move.toSquare);
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 785) 	emptySquares |= (1 << move.fromSquare);
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 786) 	pieces[color] &= ~(1 << move.fromSquare);
05f679e3 (JMcknight              2022-10-25 10:03:31 -0400 787) 	pieces[color] |= (1 << move.toSquare);
0669c067 (JMcknight              2022-10-25 13:24:23 -0400 788) 	pieceTypes[color][5] &= ~(1 << move.fromSquare);
b46f046a (JMcknight              2022-10-18 09:31:07 -0400 802) 	}
af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 803) }
cc1aef05 (JMcknight              2022-10-25 08:26:29 -0400 832) 
cc1aef05 (JMcknight              2022-10-25 08:26:29 -0400 868) 
cc1aef05 (JMcknight              2022-10-25 08:26:29 -0400 875) 
af0f21f3 (JMcknight              2022-10-18 09:13:31 -0400 876) }
